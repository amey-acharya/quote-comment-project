{"ast":null,"code":"var _jsxFileName = \"/Users/ameyacharya/Desktop/assignment/assignment19/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'; // const DUMMY_QUOTES = [\n//   {\n//     id: \"q1\",\n//     author: \"Amey A.\",\n//     text: \"Learning React Is Fun.\",\n//   },\n//   {\n//     id: \"q2\",\n//     author: \"Diya P\",\n//     text: \"Learning React Is Boring.\",\n//   },\n//   {\n//     id: \"q3\",\n//     author: \"Amey A.\",\n//     text: \"No it really is.\",\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: loadedQuotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllQuotes, \"SfSVcpc0ZadyNGuM4WkoEDcFW3Q=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["React","useEffect","useHttp","getAllQuotes","QuoteList","LoadingSpinner","NoQuotesFound","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"sources":["/Users/ameyacharya/Desktop/assignment/assignment19/src/pages/AllQuotes.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\n\n// const DUMMY_QUOTES = [\n//   {\n//     id: \"q1\",\n//     author: \"Amey A.\",\n//     text: \"Learning React Is Fun.\",\n//   },\n//   {\n//     id: \"q2\",\n//     author: \"Diya P\",\n//     text: \"Learning React Is Boring.\",\n//   },\n//   {\n//     id: \"q3\",\n//     author: \"Amey A.\",\n//     text: \"No it really is.\",\n//   },\n// ];\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n    }\n    if (error) {\n      return <p className=\"centered focused\">{error}</p>\n    }\n\n    if ((status==='completed') && (!loadedQuotes || loadedQuotes.length === 0)) {\n      return <NoQuotesFound />\n    }\n  return (\n    <div>\n      <QuoteList quotes={loadedQuotes} />\n    </div>\n  );\n};\n\nexport default AllQuotes;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM;IACJC,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,YAHF;IAIJC;EAJI,IAKFV,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;EAMAF,SAAS,CAAC,MAAM;IACdO,WAAW;EACZ,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;EAIA,IAAIC,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKC;;EACD,IAAIG,KAAJ,EAAW;IACT,oBAAO;MAAG,SAAS,EAAC,kBAAb;MAAA,UAAiCA;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAKH,MAAM,KAAG,WAAV,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAJ,EAA4E;IAC1E,oBAAO,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACH,oBACE;IAAA,uBACE,QAAC,SAAD;MAAW,MAAM,EAAEF;IAAnB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA9BD;;GAAMJ,S;UAMAL,O;;;KANAK,S;AAgCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}