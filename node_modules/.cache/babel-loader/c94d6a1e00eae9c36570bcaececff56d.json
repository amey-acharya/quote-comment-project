{"ast":null,"code":"var _jsxFileName = \"/Users/ameyacharya/Desktop/assignment/assignment19/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Amey A.\",\n  text: \"Learning React Is Fun.\"\n}, {\n  id: \"q2\",\n  author: \"Diya P\",\n  text: \"Learning React Is Boring.\"\n}, {\n  id: \"q3\",\n  author: \"Amey A.\",\n  text: \"No it really is.\"\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: DUMMY_QUOTES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllQuotes, \"SfSVcpc0ZadyNGuM4WkoEDcFW3Q=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["React","useEffect","useHttp","getAllQuotes","QuoteList","LoadingSpinner","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"sources":["/Users/ameyacharya/Desktop/assignment/assignment19/src/pages/AllQuotes.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst DUMMY_QUOTES = [\n  {\n    id: \"q1\",\n    author: \"Amey A.\",\n    text: \"Learning React Is Fun.\",\n  },\n  {\n    id: \"q2\",\n    author: \"Diya P\",\n    text: \"Learning React Is Boring.\",\n  },\n  {\n    id: \"q3\",\n    author: \"Amey A.\",\n    text: \"No it really is.\",\n  },\n];\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest()\n  },[sendRequest])\n  if (status==='pending') {\n    return <div className=\"centered\"><LoadingSpinner /></div>\n  }\n  return (\n    <div>\n      <QuoteList quotes={DUMMY_QUOTES} />\n    </div>\n  );\n};\n\nexport default AllQuotes;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,SAFV;EAGEC,IAAI,EAAE;AAHR,CADmB,EAMnB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,QAFV;EAGEC,IAAI,EAAE;AAHR,CANmB,EAWnB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,SAFV;EAGEC,IAAI,EAAE;AAHR,CAXmB,CAArB;;AAkBA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM;IACJC,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,YAHF;IAIJC;EAJI,IAKFb,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;EAMAF,SAAS,CAAC,MAAM;IACdU,WAAW;EACZ,CAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;EAGA,IAAIC,MAAM,KAAG,SAAb,EAAwB;IACtB,oBAAO;MAAK,SAAS,EAAC,UAAf;MAAA,uBAA0B,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IAA1B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBACE;IAAA,uBACE,QAAC,SAAD;MAAW,MAAM,EAAEN;IAAnB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAlBD;;GAAMI,S;UAMAR,O;;;KANAQ,S;AAoBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}