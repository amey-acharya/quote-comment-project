{"ast":null,"code":"var _jsxFileName = \"/Users/ameyacharya/Desktop/assignment/assignment19/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link, Route, useHistory, useParams } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport classes from \"./QuoteDetail.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Amey A.\",\n  text: \"Learning React Is Fun.\"\n}, {\n  id: \"q2\",\n  author: \"Diya P\",\n  text: \"Learning React Is Boring.\"\n}, {\n  id: \"q3\",\n  text: \"No it really is.\",\n  author: \"Amey A.\"\n}];\nconst {\n  sendRequest,\n  status,\n  data: loadedQuote,\n  error\n} = seHttp(getSingleQuote, true);\nuseEffect(() => {\n  sendRequest();\n}, [sendRequest]);\n\nconst QuoteDetail = props => {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sorry! Quote is not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n    history.push(`/quotes/quote/${params.quoteId}/comments`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/quotes\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      author: quote.author,\n      text: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/quotes/${params.quoteId}/comments`,\n          className: \"btn--flat\",\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"KbwOSce/182azba3I8fu9Flg44o=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","useEffect","Link","Route","useHistory","useParams","useHttp","getSingleQuote","Comments","HighlightedQuote","classes","DUMMY_QUOTES","id","author","text","sendRequest","status","data","loadedQuote","error","seHttp","QuoteDetail","props","history","params","quote","find","quoteId","push"],"sources":["/Users/ameyacharya/Desktop/assignment/assignment19/src/pages/QuoteDetail.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link, Route, useHistory, useParams } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport classes from \"./QuoteDetail.module.css\";\n\nconst DUMMY_QUOTES = [\n  {\n    id: \"q1\",\n    author: \"Amey A.\",\n    text: \"Learning React Is Fun.\",\n  },\n  {\n    id: \"q2\",\n    author: \"Diya P\",\n    text: \"Learning React Is Boring.\",\n  },\n  {\n    id: \"q3\",\n    text: \"No it really is.\",\n    author: \"Amey A.\",\n  },\n];\n\nconst {\n  sendRequest,\n  status,\n  data: loadedQuote,\n  error,\n} = seHttp(getSingleQuote, true);\n\nuseEffect(() => {\n  sendRequest()\n},[sendRequest])\n\nconst QuoteDetail = (props) => {\n  const history = useHistory();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (!quote) {\n    return (\n      <section>\n        <h1>Sorry! Quote is not found</h1>\n      </section>\n    );\n    history.push(`/quotes/quote/${params.quoteId}/comments`);\n  }\n  return (\n    <div>\n      <Link to=\"/quotes\">\n        <p>back</p>\n      </Link>\n      <HighlightedQuote author={quote.author} text={quote.text} />\n      <Route path={`/quotes/${params.quoteId}`} exact>\n        <div className=\"centered\">\n          <Link to={`/quotes/${params.quoteId}/comments`} className=\"btn--flat\">\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`/quotes/${params.quoteId}/comments`}>\n        <Comments />\n      </Route>\n    </div>\n  );\n};\n\nexport default QuoteDetail;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,kBAAnD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,SAFV;EAGEC,IAAI,EAAE;AAHR,CADmB,EAMnB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,QAFV;EAGEC,IAAI,EAAE;AAHR,CANmB,EAWnB;EACEF,EAAE,EAAE,IADN;EAEEE,IAAI,EAAE,kBAFR;EAGED,MAAM,EAAE;AAHV,CAXmB,CAArB;AAkBA,MAAM;EACJE,WADI;EAEJC,MAFI;EAGJC,IAAI,EAAEC,WAHF;EAIJC;AAJI,IAKFC,MAAM,CAACb,cAAD,EAAiB,IAAjB,CALV;AAOAN,SAAS,CAAC,MAAM;EACdc,WAAW;AACZ,CAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;AAIA,MAAMM,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,OAAO,GAAGnB,UAAU,EAA1B;EACA,MAAMoB,MAAM,GAAGnB,SAAS,EAAxB;EACA,MAAMoB,KAAK,GAAGd,YAAY,CAACe,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACb,EAAN,KAAaY,MAAM,CAACG,OAAjD,CAAd;;EAEA,IAAI,CAACF,KAAL,EAAY;IACV,oBACE;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;IAKAF,OAAO,CAACK,IAAR,CAAc,iBAAgBJ,MAAM,CAACG,OAAQ,WAA7C;EACD;;EACD,oBACE;IAAA,wBACE,QAAC,IAAD;MAAM,EAAE,EAAC,SAAT;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,gBAAD;MAAkB,MAAM,EAAEF,KAAK,CAACZ,MAAhC;MAAwC,IAAI,EAAEY,KAAK,CAACX;IAApD;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUU,MAAM,CAACG,OAAQ,EAAvC;MAA0C,KAAK,MAA/C;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,EAAE,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAApC;UAAgD,SAAS,EAAC,WAA1D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eAYE,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAvC;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA/BD;;GAAMN,W;UACYjB,U,EACDC,S;;;KAFXgB,W;AAiCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}